version: '3'
services:
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    networks: 
      - overlay
    ports:
      - "27017:27017"
  zookeeper:
    restart: always
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    networks: 
      - overlay
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    restart: always
    hostname: kafka
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks: 
      - overlay
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INSIDE
      KAFKA_LISTENERS: LISTENER_INSIDE://kafka:9091,LISTENER_OUTSIDE://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INSIDE://kafka:9091,LISTENER_OUTSIDE://${KAFKA_LISTENER_OUTSIDE}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INSIDE:PLAINTEXT,LISTENER_OUTSIDE:PLAINTEXT
  event-store-logs-api:
    container_name: event-store-logs-api
    image: event-store-logs:api
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    hostname: event-store-logs-api
    networks:
      - overlay
    ports:
      - 80:${APP_PORT}
    environment:
      APP_PORT: ${APP_PORT}
      MONGO_URI: ${MONGO_URI}
      BROCKER_HOST: ${BROCKER_HOST}
      BROCKER_USER_ID: ${BROCKER_USER_ID}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mongo
      - kafka
      - zookeeper
  event-store-logs-dev:
    container_name: event-store-logs-dev
    image: event-store-logs:dev
    hostname: event-store-logs-dev
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.dev
    networks: 
      - overlay
    volumes:
      - ../:/app/
    ports:
      - 3000:${APP_PORT}
    environment:
      APP_PORT: ${APP_PORT}
      MONGO_URI: ${MONGO_URI}
      BROCKER_HOST: ${BROCKER_HOST}
      BROCKER_USER_ID: ${BROCKER_USER_ID}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mongo
      - kafka
      - zookeeper
  event-store-logs-e2e:
    container_name: event-store-logs-e2e
    image: event-store-logs:e2e
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.e2e
    hostname: event-store-logs-e2e
    networks:
      - overlay
    environment:
      APP_PORT: ${APP_PORT}
      MONGO_URI: ${MONGO_URI}
      BROCKER_HOST: ${BROCKER_HOST}
      BROCKER_USER_ID: ${BROCKER_USER_ID}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mongo
      - kafka
      - zookeeper
volumes:
  portainer:
  node_modules:
networks:
  overlay:
